'use client';

import { useState, useEffect } from 'react';
import { Loader2, Target } from 'lucide-react';
import TrainingDashboard from '@/components/training/TrainingDashboard';
import PlanImportInterface from '@/components/onboarding/PlanImportInterface';

export default function DashboardPage() {
  const [loading, setLoading] = useState(true);
  const [hasTrainingPlan, setHasTrainingPlan] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    checkForExistingPlans();
  }, []);

  const checkForExistingPlans = async () => {
    try {
      const response = await fetch('/api/training/blocks');
      
      if (!response.ok) {
        throw new Error('Failed to check training plans');
      }
      
      const blocks = await response.json();
      
      // Check if user has any active training blocks
      const hasActivePlan = blocks && blocks.length > 0 && 
        blocks.some((block: any) => block.status === 'active');
      
      setHasTrainingPlan(hasActivePlan);
      
    } catch (err: any) {
      console.error('Error checking training plans:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handlePlanCreated = () => {
    // Called when user successfully creates a plan
    setHasTrainingPlan(true);
  };

  if (loading) {
    return (
      <div className="max-w-md mx-auto min-h-screen relative overflow-hidden">
        {/* Valencia Background */}
        <div className="absolute inset-0 bg-gradient-to-br from-orange-300/30 via-red-300/20 to-purple-300/30"></div>
        <div className="absolute inset-0 opacity-10">
          <div className="absolute bottom-0 left-0 w-full h-48 bg-gradient-to-t from-orange-400 to-transparent"></div>
          <div className="absolute top-20 left-10 w-16 h-32 bg-white/40 rounded-sm"></div>
          <div className="absolute top-16 left-32 w-20 h-36 bg-white/50 rounded-sm"></div>
          <div className="absolute top-24 left-56 w-18 h-28 bg-white/40 rounded-sm"></div>
          <div className="absolute top-12 right-20 w-24 h-40 bg-white/60 rounded-sm"></div>
        </div>
        
        <div className="absolute inset-0 bg-gradient-to-br from-slate-900/90 via-blue-900/85 to-purple-900/90"></div>
        
        <div className="relative z-10 flex items-center justify-center min-h-screen">
          <div className="text-center">
            {/* JRNY Logo */}
            <h1 className="text-4xl font-black text-white tracking-tighter drop-shadow-lg italic transform -skew-x-6 mb-8" 
                style={{fontFamily: 'system-ui, -apple-system, sans-serif', letterSpacing: '-0.05em'}}>
              JRNY
            </h1>
            
            {/* Loading Animation */}
            <div className="flex items-center justify-center space-x-2 text-white/80">
              <Loader2 className="w-6 h-6 animate-spin" />
              <span className="text-lg font-medium">Setting up your journey...</span>
            </div>
            
            {/* Subtitle */}
            <p className="text-white/60 mt-4 text-sm">
              Checking for existing training plans
            </p>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="max-w-md mx-auto min-h-screen relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-slate-900/90 via-blue-900/85 to-purple-900/90"></div>
        
        <div className="relative z-10 flex items-center justify-center min-h-screen p-6">
          <div className="text-center">
            <h1 className="text-4xl font-black text-white tracking-tighter drop-shadow-lg italic transform -skew-x-6 mb-8">
              JRNY
            </h1>
            
            <div className="bg-red-500/20 border border-red-500/30 rounded-lg p-6 mb-6">
              <p className="text-red-200 mb-4">
                Unable to load your training data
              </p>
              <p className="text-red-300/80 text-sm mb-4">
                {error}
              </p>
              <button 
                onClick={checkForExistingPlans}
                className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition-colors"
              >
                Try Again
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // If user has a training plan, show the main dashboard
  if (hasTrainingPlan) {
    return <TrainingDashboard />;
  }

  // If no training plan, show onboarding
  return (
    <div className="max-w-md mx-auto min-h-screen relative overflow-hidden">
      {/* Valencia Background */}
      <div className="absolute inset-0 bg-gradient-to-br from-orange-300/30 via-red-300/20 to-purple-300/30"></div>
      <div className="absolute inset-0 opacity-10">
        <div className="absolute bottom-0 left-0 w-full h-48 bg-gradient-to-t from-orange-400 to-transparent"></div>
        <div className="absolute top-20 left-10 w-16 h-32 bg-white/40 rounded-sm"></div>
        <div className="absolute top-16 left-32 w-20 h-36 bg-white/50 rounded-sm"></div>
        <div className="absolute top-24 left-56 w-18 h-28 bg-white/40 rounded-sm"></div>
        <div className="absolute top-12 right-20 w-24 h-40 bg-white/60 rounded-sm"></div>
      </div>
      
      <div className="absolute inset-0 bg-gradient-to-br from-slate-900/90 via-blue-900/85 to-purple-900/90"></div>
      
      <div className="relative z-10">
        {/* Header */}
        <div className="sticky top-0 z-20">
          <div className="py-6 text-center">
            <h1 className="text-2xl font-black text-white tracking-tighter drop-shadow-lg italic transform -skew-x-6" 
                style={{fontFamily: 'system-ui, -apple-system, sans-serif', letterSpacing: '-0.05em'}}>
              JRNY
            </h1>
            <p className="text-white/70 text-sm mt-2">
              Your marathon training companion
            </p>
          </div>
        </div>

        {/* Welcome Message */}
        <div className="px-6 mb-8">
          <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 border border-white/20">
            <div className="text-center">
              <Target className="w-12 h-12 text-orange-400 mx-auto mb-4" />
              <h2 className="text-xl font-bold text-white mb-3">
                Welcome to JRNY! üèÉ‚Äç‚ôÇÔ∏è
              </h2>
              <p className="text-white/80 text-sm leading-relaxed">
                Let's get your marathon training set up. Upload your coaching plan photos 
                and we'll sync them with your Strava activities to track your progress.
              </p>
            </div>
          </div>
        </div>

        {/* Plan Import Interface */}
        <div className="px-6 pb-24">
          <PlanImportInterface onPlanCreated={handlePlanCreated} />
        </div>
      </div>
    </div>
  );
}
